import{a as c}from"./chunk-WWW2U5Y6.js";import"./chunk-TZUW3ZZR.js";import{B as m}from"./chunk-2PJ5WP6P.js";import{Ab as n,Xb as e,ea as s,fb as l,ya as a,yb as h,zb as t}from"./chunk-SNH2LDLV.js";var o=class o{constructor(){this.elementRef=s(a)}ngOnInit(){this.stripContent(),this.setHeadings()}stripContent(){this.elementRef.nativeElement.querySelector("ngx-markdown").querySelectorAll("ngx-markdown > p:nth-child(-n + 2), #ngx-markdown, #table-of-contents + ul, #table-of-contents").forEach(i=>i.remove())}setHeadings(){this.headings=Array.from(this.elementRef.nativeElement.querySelectorAll("h2")).map(i=>(i.id||(i.id=i.textContent.toLowerCase().replace(/\s/g,"-")),i))}};o.\u0275fac=function(r){return new(r||o)},o.\u0275cmp=l({type:o,selectors:[["app-render"]],decls:32,vars:1,consts:[[3,"headings"],["id","code-editor"],["id","code-diff-editor"]],template:function(r,u){r&1&&(t(0,"app-scrollspy-nav-layout",0)(1,"h1"),e(2,"Render"),n(),t(3,"ngx-markdown"),e(4,`
    The library provides a customizable editor component with various inputs and outputs for flexible usage.
  `),n(),t(5,"section")(6,"h2",1),e(7,"Code Editor"),n(),t(8,"ngx-markdown"),e(9,`
      `),t(10,"h3"),e(11,"Inputs"),n(),e(12,"\n\n      - `root` - Specifies the DOM root element for the editor (either Document or ShadowRoot; doesn't support dynamic changes)\n      - `autoFocus` - Sets whether the editor should focus on initialization (doesn't support dynamic changes)\n      - `value` - The editor's content value\n      - `disabled` - Whether the editor is disabled (two-way bindable)\n      - `readonly` - Whether the editor is read-only\n      - `theme` - The editor's theme ('light' by default)\n      - `placeholder` - Placeholder text shown when the editor is empty\n      - `indentWithTab` - Whether a Tab key creates indentation\n      - `indentUnit` - Number of spaces used for indentation\n      - `lineWrapping` - Whether text lines should wrap\n      - `highlightWhitespace` - Whether to highlight whitespace characters\n      - `languages` - Array of language descriptions for syntax highlighting (doesn't support dynamic changes)\n      - `language` - The programming language for syntax highlighting\n      - `setup` - The editor's built-in configuration ('basic,' 'minimal,' or null)\n      - `extensions` - Additional CodeMirror extensions to append to the configuration\n\n      "),t(13,"h3"),e(14,"Outputs"),n(),e(15,"\n\n      - `change` - Event emitted when the editor's content changes\n      - `focus` - Event emitted when the editor gains focus\n      - `blur` - Event emitted when the editor loses focus\n    "),n()(),t(16,"section")(17,"h2",2),e(18,"Code Diff Editor"),n(),t(19,"ngx-markdown"),e(20,`
      `),t(21,"h3"),e(22,"Inputs"),n(),e(23,"\n\n      - `theme` - The editor's theme ('light' by default)\n      - `setup` - The editor's built-in configuration ('basic,' 'minimal,' or null; doesn't support dynamic changes)\n      - `originalValue` - The content shown in the original (left) editor panel\n      - `originalExtensions` - Extensions for the original editor (doesn't support dynamic changes)\n      - `modifiedValue` - The content shown in the modified (right) editor panel\n      - `modifiedExtensions` - Extensions for the modified editor\n      - `orientation` - Controls whether editor A or B is shown first\n      - `revertControls` - Controls whether revert controls are shown between changed chunks\n      - `renderRevertControl` - Function to customize rendering of revert buttons\n      - `highlightChanges` - Whether to highlight inserted and deleted text in changed chunks (true by default)\n      - `gutter` - Controls whether a gutter marker is shown next to changed lines (true by default)\n      - `disabled` - Whether the diff editor is disabled (two-way bindable)\n      - `collapseUnchanged` - Configuration for collapsing unchanged text sections\n      - `diffConfig` - Options passed to the diff algorithm\n\n      "),t(24,"h3"),e(25,"Outputs"),n(),e(26,"\n\n      - `originalValueChange` - Event emitted when the original editor's content changes\n      - `originalFocus` - Event emitted when focus is on the original editor\n      - `originalBlur` - Event emitted when original editor loses focus\n      - `modifiedValueChange` - Event emitted when the modified editor's content changes\n      - `modifiedFocus` - Event emitted when focus is on the modified editor\n      - `modifiedBlur` - Event emitted when modified editor loses focus\n    "),n()(),t(27,"section")(28,"h2",2),e(29,"Code Editor Module"),n(),t(30,"ngx-markdown"),e(31,"\n      It is recommended to import the `CodeEditorModule` in your application module to use the editor components *if you are not using `standalone` components*.\n\n      This module provides all necessary components and services for the code editor and diff editor functionalities.\n    "),n()()()),r&2&&h("headings",u.headings)},dependencies:[m,c],encapsulation:2});var d=o;export{d as default};
